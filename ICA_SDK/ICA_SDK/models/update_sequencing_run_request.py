# coding: utf-8

"""
    IAP Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from ICA_SDK.configuration import Configuration


class UpdateSequencingRunRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'run_name': 'str',
        'description': 'str',
        'prep_kit_info': 'SequencingRunPrepKitInfo',
        'flow_cell_barcode': 'str',
        'input_container_identifier': 'str',
        'consumables': 'object',
        'sample_sheet_name': 'str',
        'is_favorite': 'bool',
        'acl': 'list[str]'
    }

    attribute_map = {
        'run_name': 'runName',
        'description': 'description',
        'prep_kit_info': 'prepKitInfo',
        'flow_cell_barcode': 'flowCellBarcode',
        'input_container_identifier': 'inputContainerIdentifier',
        'consumables': 'consumables',
        'sample_sheet_name': 'sampleSheetName',
        'is_favorite': 'isFavorite',
        'acl': 'acl'
    }

    def __init__(self, run_name=None, description=None, prep_kit_info=None, flow_cell_barcode=None, input_container_identifier=None, consumables=None, sample_sheet_name=None, is_favorite=None, acl=None, local_vars_configuration=None):  # noqa: E501
        """UpdateSequencingRunRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._run_name = None
        self._description = None
        self._prep_kit_info = None
        self._flow_cell_barcode = None
        self._input_container_identifier = None
        self._consumables = None
        self._sample_sheet_name = None
        self._is_favorite = None
        self._acl = None
        self.discriminator = None

        if run_name is not None:
            self.run_name = run_name
        if description is not None:
            self.description = description
        if prep_kit_info is not None:
            self.prep_kit_info = prep_kit_info
        if flow_cell_barcode is not None:
            self.flow_cell_barcode = flow_cell_barcode
        if input_container_identifier is not None:
            self.input_container_identifier = input_container_identifier
        if consumables is not None:
            self.consumables = consumables
        if sample_sheet_name is not None:
            self.sample_sheet_name = sample_sheet_name
        if is_favorite is not None:
            self.is_favorite = is_favorite
        if acl is not None:
            self.acl = acl

    @property
    def run_name(self):
        """Gets the run_name of this UpdateSequencingRunRequest.  # noqa: E501

        User-provided name of the experiment/run  Not guaranteed to be unique for either request token or system  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is considered metadata, and is restricted by metadata update rules  # noqa: E501

        :return: The run_name of this UpdateSequencingRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._run_name

    @run_name.setter
    def run_name(self, run_name):
        """Sets the run_name of this UpdateSequencingRunRequest.

        User-provided name of the experiment/run  Not guaranteed to be unique for either request token or system  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is considered metadata, and is restricted by metadata update rules  # noqa: E501

        :param run_name: The run_name of this UpdateSequencingRunRequest.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                run_name is not None and len(run_name) > 255):
            raise ValueError("Invalid value for `run_name`, length must be less than or equal to `255`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                run_name is not None and len(run_name) < 0):
            raise ValueError("Invalid value for `run_name`, length must be greater than or equal to `0`")  # noqa: E501

        self._run_name = run_name

    @property
    def description(self):
        """Gets the description of this UpdateSequencingRunRequest.  # noqa: E501

        User-provided description of the experiment/run  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is NOT considered metadata, and is not restricted by metadata update rules  If the run is locked, description may only be updated by the user who locked the run  # noqa: E501

        :return: The description of this UpdateSequencingRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateSequencingRunRequest.

        User-provided description of the experiment/run  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is NOT considered metadata, and is not restricted by metadata update rules  If the run is locked, description may only be updated by the user who locked the run  # noqa: E501

        :param description: The description of this UpdateSequencingRunRequest.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                description is not None and len(description) > 8192):
            raise ValueError("Invalid value for `description`, length must be less than or equal to `8192`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                description is not None and len(description) < 0):
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")  # noqa: E501

        self._description = description

    @property
    def prep_kit_info(self):
        """Gets the prep_kit_info of this UpdateSequencingRunRequest.  # noqa: E501


        :return: The prep_kit_info of this UpdateSequencingRunRequest.  # noqa: E501
        :rtype: SequencingRunPrepKitInfo
        """
        return self._prep_kit_info

    @prep_kit_info.setter
    def prep_kit_info(self, prep_kit_info):
        """Sets the prep_kit_info of this UpdateSequencingRunRequest.


        :param prep_kit_info: The prep_kit_info of this UpdateSequencingRunRequest.  # noqa: E501
        :type: SequencingRunPrepKitInfo
        """

        self._prep_kit_info = prep_kit_info

    @property
    def flow_cell_barcode(self):
        """Gets the flow_cell_barcode of this UpdateSequencingRunRequest.  # noqa: E501

        The barcode of the FlowCell used in the sequencing run.  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is considered metadata, and is restricted by metadata update rules  # noqa: E501

        :return: The flow_cell_barcode of this UpdateSequencingRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._flow_cell_barcode

    @flow_cell_barcode.setter
    def flow_cell_barcode(self, flow_cell_barcode):
        """Sets the flow_cell_barcode of this UpdateSequencingRunRequest.

        The barcode of the FlowCell used in the sequencing run.  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is considered metadata, and is restricted by metadata update rules  # noqa: E501

        :param flow_cell_barcode: The flow_cell_barcode of this UpdateSequencingRunRequest.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                flow_cell_barcode is not None and len(flow_cell_barcode) > 255):
            raise ValueError("Invalid value for `flow_cell_barcode`, length must be less than or equal to `255`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                flow_cell_barcode is not None and len(flow_cell_barcode) < 0):
            raise ValueError("Invalid value for `flow_cell_barcode`, length must be greater than or equal to `0`")  # noqa: E501

        self._flow_cell_barcode = flow_cell_barcode

    @property
    def input_container_identifier(self):
        """Gets the input_container_identifier of this UpdateSequencingRunRequest.  # noqa: E501

        Input container identifier used in the sequencing run  # noqa: E501

        :return: The input_container_identifier of this UpdateSequencingRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._input_container_identifier

    @input_container_identifier.setter
    def input_container_identifier(self, input_container_identifier):
        """Sets the input_container_identifier of this UpdateSequencingRunRequest.

        Input container identifier used in the sequencing run  # noqa: E501

        :param input_container_identifier: The input_container_identifier of this UpdateSequencingRunRequest.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                input_container_identifier is not None and len(input_container_identifier) > 255):
            raise ValueError("Invalid value for `input_container_identifier`, length must be less than or equal to `255`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                input_container_identifier is not None and len(input_container_identifier) < 0):
            raise ValueError("Invalid value for `input_container_identifier`, length must be greater than or equal to `0`")  # noqa: E501

        self._input_container_identifier = input_container_identifier

    @property
    def consumables(self):
        """Gets the consumables of this UpdateSequencingRunRequest.  # noqa: E501

        Information (such as barcodes) of the consumables (such as reagents, buffers, ...) used in the sequencing run.  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is considered metadata, and is restricted by metadata update rules  # noqa: E501

        :return: The consumables of this UpdateSequencingRunRequest.  # noqa: E501
        :rtype: object
        """
        return self._consumables

    @consumables.setter
    def consumables(self, consumables):
        """Sets the consumables of this UpdateSequencingRunRequest.

        Information (such as barcodes) of the consumables (such as reagents, buffers, ...) used in the sequencing run.  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is considered metadata, and is restricted by metadata update rules  # noqa: E501

        :param consumables: The consumables of this UpdateSequencingRunRequest.  # noqa: E501
        :type: object
        """

        self._consumables = consumables

    @property
    def sample_sheet_name(self):
        """Gets the sample_sheet_name of this UpdateSequencingRunRequest.  # noqa: E501

        Name of the sample sheet file  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is considered metadata, and is restricted by metadata update rules  # noqa: E501

        :return: The sample_sheet_name of this UpdateSequencingRunRequest.  # noqa: E501
        :rtype: str
        """
        return self._sample_sheet_name

    @sample_sheet_name.setter
    def sample_sheet_name(self, sample_sheet_name):
        """Sets the sample_sheet_name of this UpdateSequencingRunRequest.

        Name of the sample sheet file  If null or undefined, existing value is left as is  Any other non-null values are used to update the RunName field of the run  This property is considered metadata, and is restricted by metadata update rules  # noqa: E501

        :param sample_sheet_name: The sample_sheet_name of this UpdateSequencingRunRequest.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                sample_sheet_name is not None and len(sample_sheet_name) > 255):
            raise ValueError("Invalid value for `sample_sheet_name`, length must be less than or equal to `255`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                sample_sheet_name is not None and len(sample_sheet_name) < 0):
            raise ValueError("Invalid value for `sample_sheet_name`, length must be greater than or equal to `0`")  # noqa: E501

        self._sample_sheet_name = sample_sheet_name

    @property
    def is_favorite(self):
        """Gets the is_favorite of this UpdateSequencingRunRequest.  # noqa: E501

        Set the run as favorite runs  # noqa: E501

        :return: The is_favorite of this UpdateSequencingRunRequest.  # noqa: E501
        :rtype: bool
        """
        return self._is_favorite

    @is_favorite.setter
    def is_favorite(self, is_favorite):
        """Sets the is_favorite of this UpdateSequencingRunRequest.

        Set the run as favorite runs  # noqa: E501

        :param is_favorite: The is_favorite of this UpdateSequencingRunRequest.  # noqa: E501
        :type: bool
        """

        self._is_favorite = is_favorite

    @property
    def acl(self):
        """Gets the acl of this UpdateSequencingRunRequest.  # noqa: E501


        :return: The acl of this UpdateSequencingRunRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._acl

    @acl.setter
    def acl(self, acl):
        """Sets the acl of this UpdateSequencingRunRequest.


        :param acl: The acl of this UpdateSequencingRunRequest.  # noqa: E501
        :type: list[str]
        """

        self._acl = acl

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UpdateSequencingRunRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, UpdateSequencingRunRequest):
            return True

        return self.to_dict() != other.to_dict()
