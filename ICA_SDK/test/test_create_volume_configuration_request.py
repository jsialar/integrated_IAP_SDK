# coding: utf-8

"""
    IAP Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ICA_SDK
from ICA_SDK.models.create_volume_configuration_request import CreateVolumeConfigurationRequest  # noqa: E501
from ICA_SDK.rest import ApiException

class TestCreateVolumeConfigurationRequest(unittest.TestCase):
    """CreateVolumeConfigurationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateVolumeConfigurationRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ICA_SDK.models.create_volume_configuration_request.CreateVolumeConfigurationRequest()  # noqa: E501
        if include_optional :
            return CreateVolumeConfigurationRequest(
                name = '0', 
                object_store_settings = ICA_SDK.models.object_store_settings.ObjectStoreSettings(
                    aws_s3 = ICA_SDK.models.awss3_object_store_setting.AWSS3ObjectStoreSetting(
                        bucket_name = '012', 
                        key_prefix = 'a', 
                        server_side_encryption_algorithm = '0', 
                        server_side_encryption_key = '0', ), 
                    secret_name = '0', 
                    secret_id = '0', )
            )
        else :
            return CreateVolumeConfigurationRequest(
                name = '0',
                object_store_settings = ICA_SDK.models.object_store_settings.ObjectStoreSettings(
                    aws_s3 = ICA_SDK.models.awss3_object_store_setting.AWSS3ObjectStoreSetting(
                        bucket_name = '012', 
                        key_prefix = 'a', 
                        server_side_encryption_algorithm = '0', 
                        server_side_encryption_key = '0', ), 
                    secret_name = '0', 
                    secret_id = '0', ),
        )

    def testCreateVolumeConfigurationRequest(self):
        """Test CreateVolumeConfigurationRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
