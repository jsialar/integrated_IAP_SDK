# coding: utf-8

"""
    IAP Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ICA_SDK
from ICA_SDK.models.run_setup_validation import RunSetupValidation  # noqa: E501
from ICA_SDK.rest import ApiException

class TestRunSetupValidation(unittest.TestCase):
    """RunSetupValidation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test RunSetupValidation
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ICA_SDK.models.run_setup_validation.RunSetupValidation()  # noqa: E501
        if include_optional :
            return RunSetupValidation(
                require_unique_sample_ids_per_lane = True, 
                enable_custom_prep_kits = True, 
                read1_length_min = 56, 
                read1_length_max = 56, 
                read2_length_min = 56, 
                read2_length_max = 56, 
                allowed_index_strategies = [
                    'NoIndex'
                    ], 
                allowed_read_types = [
                    'Single'
                    ], 
                allow_deviations = True, 
                deviation_warning_message = '0', 
                custom_prep_kit_warning_message = '0', 
                skip_validate_index_cycles_with_index_sequence_lengths = True
            )
        else :
            return RunSetupValidation(
        )

    def testRunSetupValidation(self):
        """Test RunSetupValidation"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
