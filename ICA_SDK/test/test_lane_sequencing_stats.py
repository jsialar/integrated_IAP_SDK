# coding: utf-8

"""
    IAP Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ICA_SDK
from ICA_SDK.models.lane_sequencing_stats import LaneSequencingStats  # noqa: E501
from ICA_SDK.rest import ApiException

class TestLaneSequencingStats(unittest.TestCase):
    """LaneSequencingStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test LaneSequencingStats
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ICA_SDK.models.lane_sequencing_stats.LaneSequencingStats()  # noqa: E501
        if include_optional :
            return LaneSequencingStats(
                lane_number = 56, 
                density = 1.337, 
                percent_pf = 1.337, 
                phasing = 1.337, 
                pre_phasing = 1.337, 
                reads = 56, 
                reads_pf = 56, 
                percent_gt_q30 = 1.337, 
                percent_gt_q30_last10_cycles = 1.337, 
                _yield = 1.337, 
                max_cycle_called = 56, 
                percent_aligned = 1.337, 
                error_rate = 1.337, 
                error_rate35 = 1.337, 
                error_rate50 = 1.337, 
                error_rate75 = 1.337, 
                error_rate100 = 1.337, 
                intensity_cycle1 = 1.337, 
                projected_yield_in_gbp = 1.337, 
                max_projected_yield_in_gbp = 1.337, 
                phasing_slope = 1.337, 
                phasing_offset = 1.337, 
                pre_phasing_slope = 1.337, 
                pre_phasing_offset = 1.337
            )
        else :
            return LaneSequencingStats(
                lane_number = 56,
        )

    def testLaneSequencingStats(self):
        """Test LaneSequencingStats"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
