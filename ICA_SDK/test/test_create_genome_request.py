# coding: utf-8

"""
    IAP Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ICA_SDK
from ICA_SDK.models.create_genome_request import CreateGenomeRequest  # noqa: E501
from ICA_SDK.rest import ApiException

class TestCreateGenomeRequest(unittest.TestCase):
    """CreateGenomeRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateGenomeRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ICA_SDK.models.create_genome_request.CreateGenomeRequest()  # noqa: E501
        if include_optional :
            return CreateGenomeRequest(
                acl = [
                    '0'
                    ], 
                name = '0', 
                display_name = '0', 
                order = -2147483648, 
                is_application_specific = True, 
                build = '0', 
                organization = '0', 
                description = '0', 
                status = 'Active', 
                species = '0', 
                source = '0', 
                dragen_version = '0', 
                data_location_urn = '0', 
                genome_format = 'Dragen', 
                settings = None, 
                source_file_metadata = None, 
                fasta_file_urn = '0', 
                checksum = '0'
            )
        else :
            return CreateGenomeRequest(
                name = '0',
                genome_format = 'Dragen',
        )

    def testCreateGenomeRequest(self):
        """Test CreateGenomeRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
