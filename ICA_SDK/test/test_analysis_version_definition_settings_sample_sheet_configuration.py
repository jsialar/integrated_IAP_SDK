# coding: utf-8

"""
    IAP Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ICA_SDK
from ICA_SDK.models.analysis_version_definition_settings_sample_sheet_configuration import AnalysisVersionDefinitionSettingsSampleSheetConfiguration  # noqa: E501
from ICA_SDK.rest import ApiException

class TestAnalysisVersionDefinitionSettingsSampleSheetConfiguration(unittest.TestCase):
    """AnalysisVersionDefinitionSettingsSampleSheetConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AnalysisVersionDefinitionSettingsSampleSheetConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ICA_SDK.models.analysis_version_definition_settings_sample_sheet_configuration.AnalysisVersionDefinitionSettingsSampleSheetConfiguration()  # noqa: E501
        if include_optional :
            return AnalysisVersionDefinitionSettingsSampleSheetConfiguration(
                bcl_convert_section_settings = {
                    'key' : '0'
                    }, 
                analysis_section_settings = {
                    'key' : '0'
                    }, 
                cloud_section_settings = {
                    'key' : '0'
                    }
            )
        else :
            return AnalysisVersionDefinitionSettingsSampleSheetConfiguration(
        )

    def testAnalysisVersionDefinitionSettingsSampleSheetConfiguration(self):
        """Test AnalysisVersionDefinitionSettingsSampleSheetConfiguration"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
