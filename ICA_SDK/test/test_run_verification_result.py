# coding: utf-8

"""
    IAP Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ICA_SDK
from ICA_SDK.models.run_verification_result import RunVerificationResult  # noqa: E501
from ICA_SDK.rest import ApiException

class TestRunVerificationResult(unittest.TestCase):
    """RunVerificationResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test RunVerificationResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ICA_SDK.models.run_verification_result.RunVerificationResult()  # noqa: E501
        if include_optional :
            return RunVerificationResult(
                overall_status = True, 
                run_valid = ICA_SDK.models.component_verification_result.ComponentVerificationResult(
                    pass = True, 
                    details = '0', ), 
                can_activate_dragen = ICA_SDK.models.component_verification_result.ComponentVerificationResult(
                    pass = True, 
                    details = '0', ), 
                disk_space_available = ICA_SDK.models.component_verification_result.ComponentVerificationResult(
                    pass = True, 
                    details = '0', ), 
                external_connectivity = ICA_SDK.models.component_verification_result.ComponentVerificationResult(
                    pass = True, 
                    details = '0', )
            )
        else :
            return RunVerificationResult(
        )

    def testRunVerificationResult(self):
        """Test RunVerificationResult"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
