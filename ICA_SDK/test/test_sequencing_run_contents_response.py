# coding: utf-8

"""
    IAP Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ICA_SDK
from ICA_SDK.models.sequencing_run_contents_response import SequencingRunContentsResponse  # noqa: E501
from ICA_SDK.rest import ApiException

class TestSequencingRunContentsResponse(unittest.TestCase):
    """SequencingRunContentsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SequencingRunContentsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ICA_SDK.models.sequencing_run_contents_response.SequencingRunContentsResponse()  # noqa: E501
        if include_optional :
            return SequencingRunContentsResponse(
                lane_contents_response = [
                    ICA_SDK.models.lane_content_response.LaneContentResponse(
                        lane_number = 56, 
                        library_pool = ICA_SDK.models.library_pool_compact.LibraryPoolCompact(
                            id = '0', 
                            urn = '0', 
                            href = '0', 
                            name = '0', 
                            description = '0', 
                            status = '0', 
                            sub_tenant_id = '0', 
                            acl = [
                                '0'
                                ], 
                            tenant_id = '0', 
                            tenant_name = '0', 
                            created_by_client_id = '0', 
                            created_by = '0', 
                            modified_by = '0', 
                            time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        library_pool_name = '0', 
                        library_pool_urn = '0', 
                        lane_libraries = [
                            ICA_SDK.models.lane_library_response.LaneLibraryResponse(
                                sample_name = '0', 
                                sample_urn = '0', 
                                data_aggregation_group = '0', 
                                project_name = '0', 
                                library_name = '0', 
                                library_urn = '0', 
                                adapter_sequence_read1 = '0', 
                                adapter_sequence_read2 = '0', 
                                index_container_position = '0', 
                                index1_sequence = '0', 
                                index2_sequence = '0', 
                                index1_name = '0', 
                                index2_name = '0', 
                                library_prep_kit_name = '0', 
                                library_prep_kit_urn = '0', 
                                index_adapter_kit_name = '0', 
                                index_adapter_kit_urn = '0', 
                                adapter_behavior = '0', 
                                override_cycles = '0', 
                                library = ICA_SDK.models.library_compact.LibraryCompact(
                                    id = '0', 
                                    urn = '0', 
                                    href = '0', 
                                    name = '0', 
                                    description = '0', 
                                    status = '0', 
                                    index_container_position = '0', 
                                    index1_name = '0', 
                                    index2_name = '0', 
                                    index1_sequence = '0', 
                                    index2_sequence = '0', 
                                    adapter_sequence_read1 = '0', 
                                    adapter_sequence_read2 = '0', 
                                    sample = ICA_SDK.models.sample_compact.SampleCompact(
                                        id = '0', 
                                        urn = '0', 
                                        href = '0', 
                                        name = '0', 
                                        description = '0', 
                                        status = '0', 
                                        lab_status = '0', 
                                        data_aggregation_group = '0', 
                                        project_name = '0', 
                                        external_id = '0', 
                                        sub_tenant_id = '0', 
                                        tenant_id = '0', 
                                        tenant_name = '0', 
                                        created_by_client_id = '0', 
                                        created_by = '0', 
                                        modified_by = '0', 
                                        time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                    library_prep_kit = ICA_SDK.models.library_prep_kit_compact.LibraryPrepKitCompact(
                                        id = '0', 
                                        urn = '0', 
                                        href = '0', 
                                        display_name = '0', 
                                        name = '0', 
                                        organization = '0', 
                                        is_illumina = True, 
                                        description = '0', 
                                        allowed_read_types = [
                                            '0'
                                            ], 
                                        default_read1_length = 56, 
                                        default_read2_length = 56, 
                                        is_application_specific = True, 
                                        settings = ICA_SDK.models.library_prep_kit_settings_response.LibraryPrepKitSettingsResponse(
                                            default_read_type = '0', ), 
                                        checksum = '0', 
                                        sub_tenant_id = '0', 
                                        tenant_id = '0', 
                                        tenant_name = '0', 
                                        created_by_client_id = '0', 
                                        created_by = '0', 
                                        modified_by = '0', 
                                        time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                    index_adapter_kit = ICA_SDK.models.index_adapter_kit_compact.IndexAdapterKitCompact(
                                        id = '0', 
                                        urn = '0', 
                                        href = '0', 
                                        name = '0', 
                                        display_name = '0', 
                                        organization = '0', 
                                        is_illumina = True, 
                                        description = '0', 
                                        allowed_index_strategies = [
                                            '0'
                                            ], 
                                        adapter_sequence_read1 = '0', 
                                        adapter_sequence_read2 = '0', 
                                        checksum = '0', 
                                        sub_tenant_id = '0', 
                                        tenant_id = '0', 
                                        tenant_name = '0', 
                                        created_by_client_id = '0', 
                                        created_by = '0', 
                                        modified_by = '0', 
                                        time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                    sub_tenant_id = '0', 
                                    tenant_id = '0', 
                                    tenant_name = '0', 
                                    created_by_client_id = '0', 
                                    created_by = '0', 
                                    modified_by = '0', 
                                    time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                            ], )
                    ]
            )
        else :
            return SequencingRunContentsResponse(
        )

    def testSequencingRunContentsResponse(self):
        """Test SequencingRunContentsResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
